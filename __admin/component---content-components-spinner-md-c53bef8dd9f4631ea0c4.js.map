{"version":3,"sources":["webpack:///./content/components/spinner.md"],"names":["name","_frontmatter","Spinner","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"gyBAQO,IAEeA,EAFTC,EAAe,GAOtBC,GALgBF,EAKQ,UALA,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,2EAC5B,kBAASG,KAIZG,EAAc,CAClBL,gBAEIM,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGP,EACF,oBACD,OAAO,YAACI,EAAD,KAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,cAG5E,mJACA,+BACA,0SACA,qHACA,2CACA,uEACA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,cACd,MAAQ,EACR,QAAU,IAJT,0CAOL,2FACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,cACd,MAAQ,EACR,QAAU,IAJT,gCAOL,0IACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,cACd,MAAQ,EACR,QAAU,IAJT,oCAOL,2CACA,iIAEA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,cACd,MAAQ,EACR,QAAU,IAJT,8CAOL,qCACA,iJAEA,kGAEA,YAACV,EAAD,CAASF,KAAK,QAAQW,QAAQ,YAC9B,uCACA,8BACA,4FACA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,iBADZ,gCAIL,sCAAqB,0BAAYA,WAAW,KAAvB,QAArB,QAA8E,0BAAYA,WAAW,KAAvB,SAA9E,qGAC4C,0BAAYA,WAAW,KAAvB,eAD5C,cACkH,0BAAYA,WAAW,KAAvB,UADlH,mDAEA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,OACd,MAAQ,IAHP,gEAML,yCACA,yBACE,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,SADX,QAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,SADX,QAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,WADX,WAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,SADX,iBAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,SADX,QAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,SADX,UAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,WADX,kBAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,SADX,0CAE8C,mBAAGA,WAAW,MAAS,CACjE,KAAQ,iDADkC,wBAIhD,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,SADX,SAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,SADX,UAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,YAEX,oBAAIA,WAAW,MAAS,CACtB,MAAS,SADX,yBAIF,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,SADX,UAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,SADX,UAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,WADX,UAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,SADX,sCAIF,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,SADX,YAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,SADX,WAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,WADX,SAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,WAGb,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,SADX,4BAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,SADX,UAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,WADX,MAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,SADX,yCAIF,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,SADX,aAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,SADX,UAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,YAEX,oBAAIA,WAAW,MAAS,CACtB,MAAS,SADX,uCAMN,6CACA,kEAAiD,mBAAGA,WAAW,KAAQ,CACnE,KAAQ,iDADqC,iBAAjD,aAGA,2FAA0E,0BAAYA,WAAW,KAAvB,sCAA1E,KACA,8FAA6E,0BAAYA,WAAW,KAAvB,sBAA7E,KACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,yHASL,yIACF,0BAAYA,WAAW,KAAvB,2CACE,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,0HAaTH,EAAWI,gBAAiB","file":"component---content-components-spinner-md-c53bef8dd9f4631ea0c4.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/awesome-design-system-14/awesome-design-system-14/node_modules/@bridgetool/gatsby-theme-dev/src/components/layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Spinner = makeShortcode(\"Spinner\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`Spinners are used when retrieving data or performing slow computations, and help to notify users that loading is underway.`}</p>\n    <h2>{`Usage`}</h2>\n    <p>{`Spinners are used when retrieving data or performing slow computations. They notify to the user that their request is being processed. Although they do not provide details about what is occurring on the back-end, they reassure the user that their action is being processed.`}</p>\n    <p>{`Use a loading spinner whenever the wait time is anticipated to be longer than three seconds.`}</p>\n    <h3>{`Types of spinners`}</h3>\n    <p>{`Classic spinner is a rotating unclosed circle.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live nocode\",\n        \"live\": true,\n        \"nocode\": true\n      }}>{`<Spinner name=\"ball-clip-rotate\" />\n`}</code></pre>\n    <p>{`In some designs, this shape is modified to match the other styles.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live nocode\",\n        \"live\": true,\n        \"nocode\": true\n      }}>{`<Spinner name=\"circle\" />\n`}</code></pre>\n    <p>{`There can be other shapes of spinners. Sometimes it is the shape what creates connection to specific application.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live nocode\",\n        \"live\": true,\n        \"nocode\": true\n      }}>{`<Spinner name=\"line-scale\" />\n`}</code></pre>\n    <h3>{`Branding spinners`}</h3>\n    <p>{`Spinners should be aligned with other brand elements and used the color from the design system\npalette.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live nocode\",\n        \"live\": true,\n        \"nocode\": true\n      }}>{`<Spinner name=\"circle\" color=\"coral\" />\n`}</code></pre>\n    <h2>{`Documenting`}</h2>\n    <p>{`For the sake of visual consistency it is good to provide the living examples\nin special blocks (as you could see above.`}</p>\n    <p>{`However, you can choose to put it inline in the very\ndocumenttaion text.`}</p>\n    <Spinner name=\"pulse\" mdxType=\"Spinner\" />\n    <p>{`Looks amazing!`}</p>\n    <h2>{`Code`}</h2>\n    <p>{`This spinner is a React component and can be used as the following.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Spinner name=\"circle\" />\n`}</code></pre>\n    <p>{`Changing that `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`color`}</inlineCode>{` attributes you can change its visual. Play around\nwith this live example. Try to give it a name `}<inlineCode parentName=\"p\">{`hree-bounce`}</inlineCode>{` and color `}<inlineCode parentName=\"p\">{`orange`}</inlineCode>{`. You can also write a text before or after it.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live\",\n        \"live\": true\n      }}>{`<Spinner name=\"folding-cube\" color=\"fuchsia\"/> loading...\n`}</code></pre>\n    <h2>{`Component props`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Default`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`name`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`String`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`'three-bounce'`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Name of spinner. Find full list in the `}<a parentName=\"td\" {...{\n              \"href\": \"http://kyleamathews.github.io/react-spinkit/\"\n            }}>{`react-spinkit docs`}</a></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`color`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`String`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Color of the spinner`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`fadeIn`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`String`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`'full'`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`'full', 'half', 'quarter', 'none'`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`noFadeIn`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`overrideSpinnerClassName`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`String`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`''`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Class to replace spinner CSS classes`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`className`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`String`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Class to be added to the spinner`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2>{`How this page works`}</h2>\n    <p>{`This pages shows a Spinner component from `}<a parentName=\"p\" {...{\n        \"href\": \"http://kyleamathews.github.io/react-spinkit/\"\n      }}>{`react-spinkit`}</a>{` library.`}</p>\n    <p>{`We expend the Gatsby theme of this website adding special files to `}<inlineCode parentName=\"p\">{`./src/@bridgetool/gatsby-theme-dev`}</inlineCode>{`.`}</p>\n    <p>{`To make the Spinner available in the examples, we link the library in `}<inlineCode parentName=\"p\">{`live-code-scope.js`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import Spinner from \"react-spinkit\"\n\nexport default {\n  // ... other libs and/or components here\n  Spinner,\n}\n`}</code></pre>\n    <p>{`Besides, it can be used in markdown. To make it happen, we put this component to the global scope listing it in\n`}<inlineCode parentName=\"p\">{`components/wrap-root-element-custom.js`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import Spinner from \"react-spinkit\"\n\nexport default {\n  // ... other libs and/or components here\n  Spinner,\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}